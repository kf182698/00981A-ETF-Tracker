name: Daily Fetch

on:
  workflow_dispatch:
    inputs:
      report_date:
        description: "指定日期 (YYYY-MM-DD 或 YYYYMMDD)，留空用台北今天"
        required: false
        default: ""
  # 平日 17:10 台北時間（UTC 09:10）
  schedule:
    - cron: "10 9 * * 1-5"

jobs:
  fetch:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Taipei

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Determine REPORT_DATE
        id: determine_date
        shell: bash
        run: |
          if [ -n "${{ github.event.inputs.report_date }}" ]; then
            RAW="${{ github.event.inputs.report_date }}"
          else
            RAW="$(date +'%Y-%m-%d')"
          fi
          if [[ "$RAW" =~ ^[0-9]{8}$ ]]; then
            REPORT_DATE="${RAW:0:4}-${RAW:4:2}-${RAW:6:2}"
          else
            REPORT_DATE="$(date -d "$RAW" +'%Y-%m-%d')"
          fi
          echo "REPORT_DATE=$REPORT_DATE" | tee -a $GITHUB_OUTPUT
          echo "REPORT_DATE=$REPORT_DATE" >> $GITHUB_ENV

      # ------------------ 抓檔（若沒有腳本會自動略過） ------------------
      - name: Fetch latest XLSX (skip if script missing)
        shell: bash
        run: |
          set -euo pipefail
          TARGET="$(git ls-files | grep -E '(^|/)?fetch_snapshot\.py$' | head -n1 || true)"
          if [ -n "$TARGET" ]; then
            echo "[run] python $TARGET"
            python "$TARGET" || echo "[warn] fetch script returned non-zero, continue…"
          else
            echo "[skip] fetch_snapshot.py 不存在，略過抓檔。"
          fi

      - name: Convert XLSX -> daily CSV (skip if script missing)
        shell: bash
        run: |
          set -euo pipefail
          TARGET="$(git ls-files | grep -E '(^|/)?xlsx_to_csv\.py$' | head -n1 || true)"
          if [ -n "$TARGET" ]; then
            echo "[run] python $TARGET"
            python "$TARGET" || echo "[warn] xlsx_to_csv 失敗，後續會以前日覆寫補上。"
          else
            echo "[skip] xlsx_to_csv.py 不存在，後續會以前日覆寫補上。"
          fi

      # 可選：若你有 export_prices_from_xlsx.py，會嘗試從 with_prices 匯出 prices/CSV
      - name: Export prices CSV from Xlsx (if available)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f export_prices_from_xlsx.py ]; then
            echo "[run] python export_prices_from_xlsx.py"
            python export_prices_from_xlsx.py || echo "[warn] export prices 失敗，待會用前日覆寫。"
          else
            echo "[skip] export_prices_from_xlsx.py 不存在。"
          fi

      # ------------------ 前日覆寫保底（確保今天一定有檔） ------------------
      - name: Ensure today's data CSV exists (copy-forward if missing)
        run: |
          python - <<'PY'
          import os, glob, shutil
          from pathlib import Path
          d = os.environ["REPORT_DATE"]
          dst = Path("data")/f"{d}.csv"
          dst.parent.mkdir(parents=True, exist_ok=True)
          if not dst.exists():
              cands = sorted(glob.glob("data/*.csv"))
              if not cands:
                  cands = sorted(glob.glob("data_snapshots/*.csv"))
              if not cands:
                  raise SystemExit("找不到可用的歷史 CSV 來前日覆寫")
              src = cands[-1]
              shutil.copyfile(src, dst)
              print(f"[copy-forward] {src} -> {dst}")
          else:
              print(f"[ok] {dst} 已存在")
          PY

      - name: Ensure today's prices CSV exists (copy-forward if missing)
        run: |
          python - <<'PY'
          import os, glob, shutil
          from pathlib import Path
          d = os.environ["REPORT_DATE"]
          dst = Path("prices")/f"{d}.csv"
          dst.parent.mkdir(parents=True, exist_ok=True)
          if not dst.exists():
              cands = sorted(glob.glob("prices/*.csv"))
              if cands:
                  src = cands[-1]
                  shutil.copyfile(src, dst)
                  print(f"[copy-forward] {src} -> {dst}")
              else:
                  print("[warn] 沒有任何歷史 prices 可前日覆寫，後續將依 build 的回補機制處理。")
          else:
              print(f"[ok] {dst} 已存在")
          PY

      # ------------------ 去重快照（非交易日不新增快照） ------------------
      - name: Update snapshots if changed
        run: |
          python - <<'PY'
          import glob, os
          from pathlib import Path
          import pandas as pd
          date = os.environ["REPORT_DATE"]
          today = Path("data")/f"{date}.csv"
          Path("data_snapshots").mkdir(exist_ok=True)
          if not today.exists():
              raise SystemExit(f"missing {today}")
          def load(p):
              df = pd.read_csv(p, encoding="utf-8-sig")
              cols = [c for c in ["股票代號","股票名稱","股數","持股權重"] if c in df.columns]
              df = df[cols].copy()
              df["股票代號"] = df["股票代號"].astype(str).str.strip()
              df["股票名稱"] = df["股票名稱"].astype(str).str.strip()
              df["股數"] = pd.to_numeric(df["股數"], errors="coerce").fillna(0).astype(int)
              df["持股權重"] = pd.to_numeric(df["持股權重"], errors="coerce").fillna(0.0).round(6)
              return df.sort_values(["股票代號"]).reset_index(drop=True)
          df_today = load(today)
          snaps = sorted(glob.glob("data_snapshots/*.csv"))
          same = False
          if snaps:
              df_prev = load(snaps[-1])
              same = df_today.equals(df_prev)
          if not same:
              df_today.to_csv(f"data_snapshots/{date}.csv", index=False, encoding="utf-8-sig")
              print("[snapshot] saved data_snapshots/", date)
          else:
              print("[snapshot] no change; skip")
          PY

      - name: Build change table + summary
        run: |
          python build_change_table.py

      - name: Generate charts
        run: |
          python charts.py

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "nothing to commit"
          else
            git commit -m "Daily update: ${REPORT_DATE}"
            git push
          fi
