name: Build Reports & Email

on:
  workflow_run:
    workflows: ["Daily Snapshot Fetch"]
    types: [completed]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: build-and-email
  cancel-in-progress: false

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Taipei
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install pandas openpyxl matplotlib sendgrid selenium

      # 下載最新的 snapshot artifact
      - name: Download latest snapshot artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: Daily Snapshot Fetch
          workflow_conclusion: success
          search_artifacts: true
          name_is_regexp: true
          # 下載最後一個成功工作流的最後一個 artifact（名稱如 snapshot-YYYY-MM-DD）
          name: snapshot-.*
          path: downloads

      - name: Detect snapshot date
        id: meta
        run: |
          set -e
          LATEST=$(ls -t downloads/*.xlsx | head -n1)
          BASE=$(basename "$LATEST")
          DATE="${BASE%.xlsx}"
          echo "date=$DATE" >> "$GITHUB_OUTPUT"
          echo "Using snapshot date: $DATE"

      - name: Convert XLSX -> CSV
        run: |
          python xlsx_to_csv.py --date "${{ steps.meta.outputs.date }}"

      - name: Build change table
        run: |
          python build_change_table.py

      - name: Make charts
        run: |
          REPORT_DATE=${{ steps.meta.outputs.date }} python charts.py

      - name: Send email
        env:
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          REPORT_DATE: ${{ steps.meta.outputs.date }}
        run: |
          python send_email.py

      - name: Upload reports & charts
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ steps.meta.outputs.date }}
          path: |
            reports/*
            charts/*
          if-no-files-found: ignore
          retention-days: 14
