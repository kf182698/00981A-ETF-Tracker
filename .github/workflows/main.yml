name: Reports & Email (00981A)
on:
  schedule:
    - cron: "15 12 * * *"
  workflow_dispatch:
permissions:
  contents: write
jobs:
  reports:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      TZ: Asia/Taipei
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Determine REPORT_DATE (latest snapshot)
        id: setdate
        shell: bash
        run: |
          if ls data_snapshots/*.csv 1> /dev/null 2>&1; then
            LAST=$(ls -1 data_snapshots/*.csv | sort | tail -n 1)
            DATE=$(basename "$LAST" .csv)
          else
            LAST=$(ls -1 data/*.csv | sort | tail -n 1)
            DATE=$(basename "$LAST" .csv)
          fi
          echo "REPORT_DATE=$DATE" >> $GITHUB_OUTPUT
          echo "Using REPORT_DATE=$DATE"
      - name: Build change table
        env:
          REPORT_DATE: ${{ steps.setdate.outputs.REPORT_DATE }}
        run: python build_change_table.py
      - name: Charts
        env:
          REPORT_DATE: ${{ steps.setdate.outputs.REPORT_DATE }}
        run: python charts.py
      - name: Send email (SMTP primary, SendGrid fallback)
        env:
          REPORT_DATE:      ${{ steps.setdate.outputs.REPORT_DATE }}
          EMAIL_USERNAME:   ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD:   ${{ secrets.EMAIL_PASSWORD }}
          EMAIL_TO:         ${{ secrets.EMAIL_TO }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        run: python send_email.py
      - name: Commit & push generated reports
        if: always()
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports/ charts/ || true
          git diff --cached --quiet || git commit -m "Reports update: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git push
